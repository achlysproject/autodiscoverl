%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
%
% For further information about the original skeleton template please visit https://github.com/Pouriya-Jahanbakhsh/estuff

{ deps , [
    {grisp , {git , "https://github.com/GrispLasp/grisp.git" , {branch , "master"}}} ,
    {epmd , {git , "https://github.com/erlang/epmd" , {ref , "4d1a59"}}}
]}.

%% == Erlang ==

{erl_opts , [
    debug_info
]}.

%% == GRiSP ==

{ grisp , [
    {otp , [
        {version , "21.0"}
    ]} ,

    {build , [
        {toolchain , [
            {directory,"/Users/laymer/GRiSP/grisp-software/rtems-install/rtems/5"}]}
    ]} ,

    {deploy , [
    % ==========
    % Mac OS X :
    % ==========
        {pre_script, "rm -rf /Volumes/GRISP/*"},
        {destination, "/Volumes/GRISP"},
        {post_script, "diskutil unmount /Volumes/GRISP"}
    % ==========
    % Linux :
    % ==========
    %     {pre_script , "rm -rf /media/user/GRISP/*"} ,
    %     {destination , "/media/user/GRISP"} ,
    %     {post_script , "umount /media/user/GRISP"}
    ]}
]}.

%% == Shell ==
{ shell , [
    {apps , []} ,
    {config , "./config/test.config"}
]}.

%% == Relx ==

{ relx , [
%%------------------------------------------------------------------------------
    {release , {autodiscoverl , "0.1.0"} , [
        grisp ,
        {epmd , none} ,
        autodiscoverl
    ]} ,
%%------------------------------------------------------------------------------
    {dev_mode , false} ,
    {generate_start_script , true} ,
    {extended_start_script , true} ,
    {sys_config , "./config/sys.config"} ,
    {vm_args , "./config/vm.args"} ,
%%------------------------------------------------------------------------------
    % https://github.com/erlang/rebar3/issues/1808, by Fred Hebert
    % Don't include source files
    {include_src, false} ,

    % Makes code harder to debug, but drops
    % debug data and source info from the final beam
    {debug_info, strip} ,

    % List of apps that are included
    % but you don't want (maybe wx or somehting?)
    {exclude_apps, [
        
    ]} ,

    % Drop modules you don't need in apps you depend on
    {exclude_modules, [
    
    ]}
]}.

{ profiles , [
    {test , [
        {dev_mode , true} ,
        {erl_opts , [
            nowarn_export_all ,
            debug_info
        ]} ,
        {relx , [
            {sys_config , "./config/test.config"}
        ]}
    ]}
]}.

%% == Cover ==

{cover_enabled, true}.
{cover_export_enabled, true}.

%% == Dialyzer ==

{ dialyzer , [
    {warnings , [underspecs
        ,        no_return
        ,        unmatched_returns
        ,        error_handling]} ,
    {plt_prefix , "autodiscoverl"} ,
    {plt_apps , top_level_deps} ,
    {plt_extra_apps , []}
]}.

%% == EDoc ==

{ edoc_opts , [
    {report_missing_types , true} ,
    {source_path , ["src"]} ,
    {report_missing_types , true} ,
    {todo , true} ,
    {preprocess , true} ,
    {packages , false} ,
    {subpackages , false}
]}.

%% == Xref ==

{ xref , [
    {xref_warnings , true} ,
    {xref_extra_paths , []} ,
    {xref_checks , [undefined_functions
        ,           deprecated_function_calls
        ,           undefined_function_calls
        ,           deprecated_functions]}
]}.
